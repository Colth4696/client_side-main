{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/colthafer/client_side-main/src/RequestList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Republish from \"./Republish\";\nimport moment from \"moment\";\nimport { useRequestState } from \"./RequestStateProvider\";\n\nfunction RequestList(props) {\n  _s();\n\n  const [state, dispatch] = useRequestState();\n  const [requests, setRequests] = useState();\n\n  const fetchData = async allRequests => {\n    let currentRequests = [];\n    currentRequests = allRequests && allRequests.filter(request => {\n      const allowRepublish = moment(request.updated_at).isBetween(moment().subtract(1, 'days'), moment());\n      return request.user_id === props.user.id && allowRepublish && request.fulfilled;\n    });\n    setRequests(currentRequests);\n  };\n\n  React.useEffect(() => {\n    fetchData(state.requests);\n  }, [state]);\n\n  const reissueRequest = request => {\n    const allRequests = state.requests;\n\n    for (let index = 0; index < allRequests.length; index++) {\n      if (allRequests[index].id === request.id) {\n        allRequests[index] = request;\n        break;\n      }\n    }\n\n    dispatch({\n      type: \"UPDATE_REQUESTS\",\n      requests: allRequests\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"List\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"RequestList\",\n      children: requests && requests.length > 0 ? requests.map((request, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"task\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Request \", index + 1]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Owner ID: \", request.user_id]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [request.title, /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"FilledButton\",\n              children: /*#__PURE__*/_jsxDEV(Republish, {\n                reissueRequest: reissueRequest,\n                request: props.request\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this);\n      }) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"There are no tasks to re-issue at this time.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n\n_s(RequestList, \"695MCCe8/Aeb5px9s4hirp6x8e4=\", false, function () {\n  return [useRequestState];\n});\n\n_c = RequestList;\nexport default RequestList;\n\nvar _c;\n\n$RefreshReg$(_c, \"RequestList\");","map":{"version":3,"sources":["/Users/colthafer/client_side-main/src/RequestList.js"],"names":["React","useState","Republish","moment","useRequestState","RequestList","props","state","dispatch","requests","setRequests","fetchData","allRequests","currentRequests","filter","request","allowRepublish","updated_at","isBetween","subtract","user_id","user","id","fulfilled","useEffect","reissueRequest","index","length","type","map","title"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Republish from \"./Republish\";\nimport moment from \"moment\";\nimport { useRequestState } from \"./RequestStateProvider\";\n\nfunction RequestList(props){\n    const [state, dispatch] = useRequestState();\n    const[requests, setRequests]= useState();\n\n\n     const fetchData = async (allRequests) => {\n        let currentRequests = [];\n        currentRequests = allRequests && allRequests.filter(request => {\n            const allowRepublish = moment(request.updated_at).isBetween(moment().subtract(1,'days'),moment());\n            return request.user_id === props.user.id && allowRepublish && request.fulfilled;\n        });\n        setRequests(currentRequests)        \n    }\n\n    React.useEffect(() => {\n        fetchData(state.requests);\n    }, [state]) \n\n    const reissueRequest = (request) => {\n        const allRequests= state.requests;\n        for (let index=0; index<allRequests.length; index++) {\n          if (allRequests[index].id === request.id) {\n            allRequests[index] = request;\n            break;\n          }\n        }\n        dispatch({ type: \"UPDATE_REQUESTS\", requests: allRequests });\n      }  \n\n    return(\n        <div className=\"List\">\n        <div className=\"RequestList\">\n            {requests && requests.length > 0 ? requests.map((request, index) => {\n                return(\n                    <div className=\"task\" key={index}>\n                        <h3>Request {index + 1}</h3>\n                        <h3>Owner ID: {request.user_id}</h3>\n                        <h2>{request.title}\n                        <div className=\"FilledButton\">\n                            <Republish  reissueRequest={reissueRequest} request={props.request} />\n                        </div>\n                        </h2>\n                    </div>\n\n                )\n            })\n        : \n            <div className=\"task\">\n                <h3>There are no tasks to re-issue at this time.</h3>\n            </div>\n        }\n        </div>\n        </div>\n    )\n}\n\nexport default RequestList;"]},"metadata":{},"sourceType":"module"}