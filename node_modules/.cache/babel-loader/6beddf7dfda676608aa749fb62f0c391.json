{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/colthafer/client_side-main/src/ChatModal.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React from 'react';\nimport { Button, Icon, Modal } from 'semantic-ui-react';\nimport ChatroomsList from './ChatroomsList';\n\nconst ModalChat = ({\n  handleClose,\n  show\n}) => {\n  _s();\n\n  const showHideClassName = show ? \"modal display-block\" : \"modal display-none\";\n  const [currentChatroom, setCurrentChatroom] = React.useState();\n  const [open, setOpen] = React.useState(false);\n\n  const initializeChat = () => {\n    const chatroom = {\n      name: props.request.title,\n      request_id: props.request.id,\n      volunteer_id: props.volunteer.id\n    };\n    axios.post(\"http://localhost:3003/chatrooms\", {\n      chatroom\n    }).then(response => {\n      if (response.status === 200) {\n        if (!chatroom.messages) chatroom.messages = [];\n        setCurrentChatroom(chatroom);\n        setOpen(true);\n      }\n\n      console.log(chatroom);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: showHideClassName,\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"modal-main\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: initializeChat,\n        children: [/*#__PURE__*/_jsxDEV(Icon, {\n          name: \"desktop\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 7\n        }, this), \"Start Chat\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 5\n      }, this), open && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundColor: \"pink\"\n        },\n        children: /*#__PURE__*/_jsxDEV(ChatroomsList, {\n          user_id: props.volunteer && props.volunteer.user_id,\n          chatroom: currentChatroom\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 55\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleClose,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ModalChat, \"rVjzgGqmGM0k14+NW5phQD3aFTY=\");\n\n_c = ModalChat;\nexport default ModalChat;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalChat\");","map":{"version":3,"sources":["/Users/colthafer/client_side-main/src/ChatModal.js"],"names":["axios","React","Button","Icon","Modal","ChatroomsList","ModalChat","handleClose","show","showHideClassName","currentChatroom","setCurrentChatroom","useState","open","setOpen","initializeChat","chatroom","name","props","request","title","request_id","id","volunteer_id","volunteer","post","then","response","status","messages","console","log","backgroundColor","user_id"],"mappings":";;;;;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,QAAoC,mBAApC;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,WAAF;AAAeC,EAAAA;AAAf,CAAD,KAA2B;AAAA;;AAC3C,QAAMC,iBAAiB,GAAGD,IAAI,GAAG,qBAAH,GAA2B,oBAAzD;AACA,QAAM,CAACE,eAAD,EAAkBC,kBAAlB,IAAwCV,KAAK,CAACW,QAAN,EAA9C;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBb,KAAK,CAACW,QAAN,CAAe,KAAf,CAAxB;;AAGA,QAAMG,cAAc,GAAG,MAAM;AAC3B,UAAMC,QAAQ,GAAI;AAChBC,MAAAA,IAAI,EAAEC,KAAK,CAACC,OAAN,CAAcC,KADJ;AAEhBC,MAAAA,UAAU,EAAEH,KAAK,CAACC,OAAN,CAAcG,EAFV;AAGhBC,MAAAA,YAAY,EAAEL,KAAK,CAACM,SAAN,CAAgBF;AAHd,KAAlB;AAKEtB,IAAAA,KAAK,CAACyB,IAAN,CAAW,iCAAX,EAA8C;AAACT,MAAAA;AAAD,KAA9C,EACCU,IADD,CACOC,QAAQ,IAAI;AACjB,UAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,YAAI,CAACZ,QAAQ,CAACa,QAAd,EAAwBb,QAAQ,CAACa,QAAT,GAAoB,EAApB;AACxBlB,QAAAA,kBAAkB,CAACK,QAAD,CAAlB;AACAF,QAAAA,OAAO,CAAC,IAAD,CAAP;AACD;;AACDgB,MAAAA,OAAO,CAACC,GAAR,CAAYf,QAAZ;AACD,KARD;AASH,GAfD;;AAiBA,sBACE;AAAK,IAAA,SAAS,EAAEP,iBAAhB;AAAA,2BACE;AAAS,MAAA,SAAS,EAAC,YAAnB;AAAA,8BACF;AAAQ,QAAA,OAAO,EAAEM,cAAjB;AAAA,gCACE,QAAC,IAAD;AAAM,UAAA,IAAI,EAAC;AAAX;AAAA;AAAA;AAAA;AAAA,gBADF;AAAA;AAAA;AAAA;AAAA;AAAA,cADE,EAKCF,IAAI,iBAAI;AAAK,QAAA,KAAK,EAAE;AAACmB,UAAAA,eAAe,EAAE;AAAlB,SAAZ;AAAA,+BAAuC,QAAC,aAAD;AAAe,UAAA,OAAO,EAAEd,KAAK,CAACM,SAAN,IAAmBN,KAAK,CAACM,SAAN,CAAgBS,OAA3D;AAAoE,UAAA,QAAQ,EAAEvB;AAA9E;AAAA;AAAA;AAAA;AAAA;AAAvC;AAAA;AAAA;AAAA;AAAA,cALT,eAMA;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAEH,WAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CArCD;;GAAMD,S;;KAAAA,S;AAsCN,eAAeA,SAAf","sourcesContent":["\r\nimport axios from 'axios'\r\nimport React from 'react'\r\nimport { Button, Icon, Modal } from 'semantic-ui-react'\r\nimport ChatroomsList from './ChatroomsList'\r\n\r\nconst ModalChat = ({ handleClose, show }) => {\r\n  const showHideClassName = show ? \"modal display-block\" : \"modal display-none\";\r\n  const [currentChatroom, setCurrentChatroom] = React.useState();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n\r\n  const initializeChat = () => {\r\n    const chatroom  = {\r\n      name: props.request.title,\r\n      request_id: props.request.id,\r\n      volunteer_id: props.volunteer.id,\r\n    }\r\n      axios.post(\"http://localhost:3003/chatrooms\", {chatroom})\r\n      .then (response => {\r\n        if (response.status === 200) {\r\n          if (!chatroom.messages) chatroom.messages = [];\r\n          setCurrentChatroom(chatroom);\r\n          setOpen(true);\r\n        }\r\n        console.log(chatroom);\r\n      })\r\n  }\r\n\r\n  return (\r\n    <div className={showHideClassName}>\r\n      <section className=\"modal-main\">\r\n    <button onClick={initializeChat}>\r\n      <Icon name='desktop' />\r\n      Start Chat\r\n    </button>\r\n      {open && <div style={{backgroundColor: \"pink\"}}><ChatroomsList user_id={props.volunteer && props.volunteer.user_id} chatroom={currentChatroom}/></div>}\r\n      <button type=\"button\" onClick={handleClose}>\r\n    Close\r\n  </button>\r\n</section>\r\n     </div>\r\n  )\r\n}\r\nexport default ModalChat;\r\n\r\n"]},"metadata":{},"sourceType":"module"}