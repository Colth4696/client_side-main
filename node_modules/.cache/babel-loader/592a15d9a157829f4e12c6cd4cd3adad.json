{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/colthafer/client_side-main/src/Fulfilled.js\";\nimport axios from \"axios\";\nimport React, { Component } from \"react\"; // const FulfilledButton = () => {\n//     const [isfulfilled, setIsFulfilled] = React.useState(false);\n//     const republish = () => {\n//         setIsFulfilled(value => !value);\n// return (\n//     <input\n//         type=\"checkbox\"\n//         checked={isfulfilled}\n//         onChange={republish}\n//     />\n// );\n// }\n// export default FulfilledButton;\n\nclass FulfilledButton extends Component {\n  constructor() {\n    super();\n\n    this.toggleStatus = () => {\n      let newStatus = this.state.status.fulfilled = true;\n      this.setState({\n        status: newStatus\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      const {\n        fulfilled,\n        volunteer_id,\n        request_id\n      } = this.state;\n      let request_status = {\n        volunteer_id: volunteer_id,\n        request_id: request_id,\n        fulfilled: fulfilled\n      };\n      axios.post(\"http://localhost:3003/statuses\", {\n        request_status\n      }, {\n        withCredentials: true\n      }).then(response => {\n        if (response.data.status === 'created') {\n          this.props.request_status(response.data);\n          this.redirect('/');\n        }\n      }).catch(error => {\n        console.log(\"request error\", error);\n      });\n      event.preventDefault();\n    };\n\n    this.state = {\n      status: [],\n      fulfilled: false\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: (this.toggleStatus, this.handleSubmit),\n      children: [\"Fulfill Request: \", this.state.request_status]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nexport default FulfilledButton;","map":{"version":3,"sources":["/Users/colthafer/client_side-main/src/Fulfilled.js"],"names":["axios","React","Component","FulfilledButton","constructor","toggleStatus","newStatus","state","status","fulfilled","setState","handleSubmit","event","preventDefault","volunteer_id","request_id","request_status","post","withCredentials","then","response","data","props","redirect","catch","error","console","log","render"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAgC,OAAhC,C,CAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,MAAMC,eAAN,SAA8BD,SAA9B,CAAwC;AACpCE,EAAAA,WAAW,GAAE;AACT;;AADS,SAQbC,YARa,GAQE,MACf;AACI,UAAIC,SAAS,GAAG,KAAKC,KAAL,CAAWC,MAAX,CAAkBC,SAAlB,GAA8B,IAA9C;AACA,WAAKC,QAAL,CAAc;AACVF,QAAAA,MAAM,EAAEF;AADE,OAAd;AAGH,KAdY;;AAAA,SAgBbK,YAhBa,GAgBGC,KAAD,IAAW;AAC1BA,MAAAA,KAAK,CAACC,cAAN;AACA,YAAM;AAACJ,QAAAA,SAAD;AAAYK,QAAAA,YAAZ;AAA0BC,QAAAA;AAA1B,UAAwC,KAAKR,KAAnD;AACA,UAAIS,cAAc,GAAG;AACnBF,QAAAA,YAAY,EAAEA,YADK;AAEnBC,QAAAA,UAAU,EAAEA,UAFO;AAGnBN,QAAAA,SAAS,EAAEA;AAHQ,OAArB;AAKIT,MAAAA,KAAK,CAACiB,IAAN,CAAW,gCAAX,EAA6C;AAACD,QAAAA;AAAD,OAA7C,EAA+D;AAACE,QAAAA,eAAe,EAAE;AAAlB,OAA/D,EACCC,IADD,CACMC,QAAQ,IAAI;AACd,YAAIA,QAAQ,CAACC,IAAT,CAAcb,MAAd,KAAyB,SAA7B,EAAwC;AACxC,eAAKc,KAAL,CAAWN,cAAX,CAA0BI,QAAQ,CAACC,IAAnC;AACA,eAAKE,QAAL,CAAc,GAAd;AACH;AACJ,OANG,EAOCC,KAPD,CAOOC,KAAK,IAAI;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BF,KAA7B;AACH,OATD;AAUAb,MAAAA,KAAK,CAACC,cAAN;AACH,KAnCY;;AAER,SAAKN,KAAL,GAAa;AACZC,MAAAA,MAAM,EAAE,EADI;AAEZC,MAAAA,SAAS,EAAE;AAFC,KAAb;AAIJ;;AAgCDmB,EAAAA,MAAM,GAAE;AACJ,wBAAO;AAAQ,MAAA,OAAO,GAAE,KAAKvB,YAAL,EAAmB,KAAKM,YAA1B,CAAf;AAAA,sCAAyE,KAAKJ,KAAL,CAAWS,cAApF;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAzCmC;;AA4CxC,eAAeb,eAAf","sourcesContent":["import axios from \"axios\";\nimport React, { Component }from \"react\";\n\n// const FulfilledButton = () => {\n//     const [isfulfilled, setIsFulfilled] = React.useState(false);\n//     const republish = () => {\n//         setIsFulfilled(value => !value);\n\n// return (\n//     <input\n//         type=\"checkbox\"\n//         checked={isfulfilled}\n//         onChange={republish}\n//     />\n// );\n// }\n\n// export default FulfilledButton;\n\nclass FulfilledButton extends Component {\n    constructor(){\n        super()\n         this.state = {\n          status: [],\n          fulfilled: false \n    };\n    }\n\n    toggleStatus = () => \n    {\n        let newStatus = this.state.status.fulfilled = true;\n        this.setState({\n            status: newStatus\n        });\n    };\n\n    handleSubmit = (event) => {\n    event.preventDefault()\n    const {fulfilled, volunteer_id, request_id} = this.state\n    let request_status = {\n      volunteer_id: volunteer_id,\n      request_id: request_id,\n      fulfilled: fulfilled\n    }\n        axios.post(\"http://localhost:3003/statuses\", {request_status}, {withCredentials: true})\n        .then(response => {\n            if (response.data.status === 'created') {\n            this.props.request_status(response.data)\n            this.redirect('/')            \n        }\n    })        \n        .catch(error => {\n            console.log(\"request error\", error);\n        });\n        event.preventDefault();\n    };\n    \n    \n    render(){\n        return <button onClick={this.toggleStatus, this.handleSubmit}>Fulfill Request: {this.state.request_status}</button>\n    }\n}\n\nexport default FulfilledButton;\n"]},"metadata":{},"sourceType":"module"}