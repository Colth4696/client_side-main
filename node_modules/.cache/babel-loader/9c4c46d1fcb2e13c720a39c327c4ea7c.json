{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/colthafer/client_side-main/src/MyMarker.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Marker, InfoWindow } from \"react-google-maps\";\nimport RedIcon from \"./red-user-icon.png\";\nimport GreenIcon from \"./green-home-icon.png\";\nimport axios from \"axios\";\nimport ModalChat from \"./ChatModal\";\nimport FulfilledButton from \"./Fulfilled\";\nimport RequestList from \"./RequestList\";\n\nconst MyMarker = props => {\n  _s();\n\n  const [flag, setFlag] = React.useState(false);\n  const [chat, setChat] = React.useState(false);\n  const [volunteer, setVolunteer] = React.useState(false);\n  const [hasMaxVolunteers, setHasMaxVolunteers] = React.useState();\n  const [loadingState, setLoadingState] = React.useState('loading');\n  React.useEffect(() => {\n    axios.get(`http://localhost:3003/volunteers`, {\n      request_id: props.request.id\n    }).then(response => {\n      const volunterList = response.data.volunteers;\n      let hasVolunteered = false;\n      const requestVolunteers = [];\n      volunterList.forEach(rv => {\n        if (rv.request_id === props.request.id) {\n          if (rv.user_id === props.user.id) {\n            hasVolunteered = true;\n          } else {\n            requestVolunteers.push(rv);\n          }\n        }\n      });\n      const hasMax = requestVolunteers.length >= 5 || hasVolunteered;\n      setHasMaxVolunteers(hasMax);\n      setLoadingState('loaded');\n    });\n  }, [props.request.id, props.user.id]);\n\n  const toggle_open = () => {\n    setFlag(!flag);\n  };\n\n  const getIcon = () => {\n    if (props.request.category === \"Material\") {\n      return RedIcon;\n    } else {\n      return GreenIcon;\n    }\n  };\n\n  const makeVolunteer = () => {\n    const volunteer = {\n      request_id: props.request.id,\n      user_id: props.user.id\n    };\n    console.log(props.user);\n    console.log(volunteer);\n    axios.post(\"http://localhost:3003/volunteers\", {\n      volunteer\n    }, {\n      params: {\n        _limit: 5\n      }\n    }).then(response => {\n      console.log(response.data);\n\n      if (response.data.status === \"created\") {\n        setChat(true);\n        setVolunteer(response.data.volunteer);\n      }\n    }).catch(error => {\n      console.error(`error:${error}`);\n    });\n  };\n\n  const MarkStyle = {\n    height: \"30px\",\n    width: \"30px\"\n  };\n  return loadingState === 'loading' ? loadingState : /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"marker\",\n    children: [/*#__PURE__*/_jsxDEV(Marker, {\n      style: MarkStyle,\n      position: props.position,\n      onClick: toggle_open,\n      icon: getIcon(),\n      children: flag && /*#__PURE__*/_jsxDEV(InfoWindow, {\n        onCloseClick: toggle_open,\n        user: props.user,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"requestInfo\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: [\"Task ID:\", props.request.id]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: [\"Requester ID:\", props.request.user_id]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: props.request.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: props.request.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 1\n          }, this), !chat && !hasMaxVolunteers ? /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: makeVolunteer,\n            children: \"Volunteer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 31\n          }, this) : '']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 19\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatBox\",\n      children: chat && /*#__PURE__*/_jsxDEV(ModalChat, {\n        request: props.request,\n        volunteer: volunteer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 6\n  }, this);\n};\n\n_s(MyMarker, \"2t0yOykwmsibqPdVE0WcWcNWIyA=\");\n\n_c = MyMarker;\nexport default MyMarker;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyMarker\");","map":{"version":3,"sources":["/Users/colthafer/client_side-main/src/MyMarker.js"],"names":["React","Marker","InfoWindow","RedIcon","GreenIcon","axios","ModalChat","FulfilledButton","RequestList","MyMarker","props","flag","setFlag","useState","chat","setChat","volunteer","setVolunteer","hasMaxVolunteers","setHasMaxVolunteers","loadingState","setLoadingState","useEffect","get","request_id","request","id","then","response","volunterList","data","volunteers","hasVolunteered","requestVolunteers","forEach","rv","user_id","user","push","hasMax","length","toggle_open","getIcon","category","makeVolunteer","console","log","post","params","_limit","status","catch","error","MarkStyle","height","width","position","title","description"],"mappings":"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","sourcesContent":["import React from \"react\"\r\nimport { Marker, InfoWindow } from \"react-google-maps\"\r\nimport RedIcon from \"./red-user-icon.png\"\r\nimport GreenIcon from \"./green-home-icon.png\"\r\nimport axios from \"axios\"\r\nimport ModalChat from \"./ChatModal\"\r\nimport FulfilledButton from \"./Fulfilled\"\r\nimport RequestList from \"./RequestList\"\r\n\r\n\r\nconst MyMarker = (props) => {\r\nconst [flag, setFlag] = React.useState(false);\r\nconst [chat, setChat] = React.useState(false);\r\nconst [volunteer, setVolunteer] = React.useState(false);\r\nconst [hasMaxVolunteers, setHasMaxVolunteers] = React.useState();\r\nconst [loadingState, setLoadingState] = React.useState('loading');\r\n\r\nReact.useEffect(() => {\r\n axios.get(`http://localhost:3003/volunteers`, {request_id: props.request.id})\r\n .then(response => {\r\n   const volunterList = response.data.volunteers;\r\n   let hasVolunteered = false;\r\n   const requestVolunteers = [];\r\n   volunterList.forEach(rv => {\r\n     if (rv.request_id === props.request.id) {\r\n       if (rv.user_id === props.user.id) {\r\n         hasVolunteered = true;\r\n       } else {\r\n         requestVolunteers.push(rv);\r\n       }\r\n     }\r\n   });\r\n   const hasMax = requestVolunteers.length >= 5 || hasVolunteered;\r\n   setHasMaxVolunteers(hasMax);\r\n   setLoadingState('loaded');\r\n })\r\n},[props.request.id, props.user.id])\r\n\r\n  const toggle_open = () => {\r\n   setFlag(!flag)\r\n }\r\n\r\n const  getIcon = () => {\r\n   if (props.request.category === \"Material\" ) { return RedIcon }\r\n   else { return GreenIcon }\r\n }\r\n\r\n const makeVolunteer = () => {\r\n   const volunteer = {\r\n     request_id: props.request.id,\r\n     user_id: props.user.id\r\n   }\r\n     console.log(props.user)\r\n     console.log(volunteer)\r\n     axios.post(\"http://localhost:3003/volunteers\", {volunteer}, {params: {_limit: 5}})\r\n       .then(response => {\r\n         console.log(response.data)\r\n         if (response.data.status === \"created\") {\r\n           setChat(true)\r\n           setVolunteer(response.data.volunteer)\r\n         }\r\n       })\r\n       .catch(error => {\r\n         console.error(`error:${error}`)\r\n       })\r\n }\r\n\r\n   const MarkStyle = {\r\n     height: \"30px\",\r\n     width: \"30px\"\r\n   }\r\n\r\n   return (\r\n     loadingState === 'loading' ? loadingState :\r\n     <div className=\"marker\">\r\n       <Marker\r\n         style={MarkStyle}\r\n         position={props.position}\r\n         onClick={toggle_open}\r\n         icon={getIcon()}>\r\n           \r\n         {flag && <InfoWindow onCloseClick={toggle_open} user={props.user}>\r\n\r\n           <div className=\"requestInfo\">\r\n<h4>Task ID:{props.request.id}</h4>\r\n<h4>Requester ID:{props.request.user_id}</h4>\r\n<h1>{props.request.title}</h1>\r\n<h3>{props.request.description}</h3>\r\n{!chat && !hasMaxVolunteers ? <button onClick={makeVolunteer}>Volunteer</button>: ''}\r\n</div>\r\n</InfoWindow>}\r\n</Marker>\r\n<div className=\"chatBox\">\r\n{chat && <ModalChat request={props.request} volunteer={volunteer}/>}\r\n</div>\r\n</div>\r\n)\r\n}\r\n\r\n\r\nexport default MyMarker"]},"metadata":{},"sourceType":"module"}