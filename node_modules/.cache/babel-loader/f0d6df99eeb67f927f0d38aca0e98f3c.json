{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/colthafer/client_side-main/src/Chatroom.js\";\nimport React from 'react';\nimport App from './App';\nimport MessagesList from './MessagesList';\nimport MessageForm from './MessageForm';\nimport update from 'immutability-helper';\nexport default class Chatroom extends React.Component {\n  constructor(props, _railsContext) {\n    super(props);\n    let chatroom = JSON.parse(this.props.chatroom);\n    this.state = {\n      messages: chatroom.messages,\n      chatroomId: chatroom.id\n    };\n    this.bottom = /*#__PURE__*/React.createRef();\n  }\n\n  updateMessages(message) {\n    const messages = update(this.state.messages, {\n      $push: [message]\n    });\n    this.setState({\n      messages: messages\n    });\n  }\n\n  componentDidMount() {\n    App.chatroom = App.cable.subscriptions.create({\n      channel: \"ChatroomChannel\",\n      id: this.state.chatroomId\n    }, {\n      received: function (data) {\n        this.updateMessages(JSON.parse(data.message));\n      }.bind(this)\n    });\n  }\n\n  componentDidUpdate() {\n    document.getElementById('messagesBottom').scrollIntoView();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(MessagesList, {\n        messages: this.state.messages\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MessageForm, {\n        chatroomId: this.state.chatroomId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/colthafer/client_side-main/src/Chatroom.js"],"names":["React","App","MessagesList","MessageForm","update","Chatroom","Component","constructor","props","_railsContext","chatroom","JSON","parse","state","messages","chatroomId","id","bottom","createRef","updateMessages","message","$push","setState","componentDidMount","cable","subscriptions","create","channel","received","data","bind","componentDidUpdate","document","getElementById","scrollIntoView","render"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AAEA,eAAe,MAAMC,QAAN,SAAuBL,KAAK,CAACM,SAA7B,CAAuC;AACpDC,EAAAA,WAAW,CAACC,KAAD,EAAQC,aAAR,EAAuB;AAChC,UAAMD,KAAN;AACA,QAAIE,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAW,KAAKJ,KAAL,CAAWE,QAAtB,CAAf;AACA,SAAKG,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAEJ,QAAQ,CAACI,QADR;AAEXC,MAAAA,UAAU,EAAEL,QAAQ,CAACM;AAFV,KAAb;AAIA,SAAKC,MAAL,gBAAcjB,KAAK,CAACkB,SAAN,EAAd;AACD;;AAEDC,EAAAA,cAAc,CAACC,OAAD,EAAU;AACtB,UAAMN,QAAQ,GAAGV,MAAM,CAAC,KAAKS,KAAL,CAAWC,QAAZ,EACG;AAACO,MAAAA,KAAK,EAAE,CAACD,OAAD;AAAR,KADH,CAAvB;AAEA,SAAKE,QAAL,CAAc;AAACR,MAAAA,QAAQ,EAAEA;AAAX,KAAd;AACD;;AAEDS,EAAAA,iBAAiB,GAAG;AAClBtB,IAAAA,GAAG,CAACS,QAAJ,GAAeT,GAAG,CAACuB,KAAJ,CAAUC,aAAV,CAAwBC,MAAxB,CAA+B;AAC5CC,MAAAA,OAAO,EAAE,iBADmC;AAE5CX,MAAAA,EAAE,EAAE,KAAKH,KAAL,CAAWE;AAF6B,KAA/B,EAIb;AACEa,MAAAA,QAAQ,EAAE,UAASC,IAAT,EAAe;AACvB,aAAKV,cAAL,CAAoBR,IAAI,CAACC,KAAL,CAAWiB,IAAI,CAACT,OAAhB,CAApB;AACD,OAFS,CAERU,IAFQ,CAEH,IAFG;AADZ,KAJa,CAAf;AASD;;AAEDC,EAAAA,kBAAkB,GAAG;AACnBC,IAAAA,QAAQ,CAACC,cAAT,CAAwB,gBAAxB,EAA0CC,cAA1C;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE,QAAC,YAAD;AAAc,QAAA,QAAQ,EAAE,KAAKtB,KAAL,CAAWC;AAAnC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,WAAD;AAAa,QAAA,UAAU,EAAE,KAAKD,KAAL,CAAWE;AAApC;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;;AAxCmD","sourcesContent":["import React from 'react'\r\nimport App from './App'\r\nimport MessagesList from './MessagesList'\r\nimport MessageForm from './MessageForm'\r\nimport update from 'immutability-helper'\r\n\r\nexport default class Chatroom extends React.Component {\r\n  constructor(props, _railsContext) {\r\n    super(props)\r\n    let chatroom = JSON.parse(this.props.chatroom)\r\n    this.state = {\r\n      messages: chatroom.messages,\r\n      chatroomId: chatroom.id\r\n    }\r\n    this.bottom = React.createRef();\r\n  }\r\n\r\n  updateMessages(message) {\r\n    const messages = update(this.state.messages,\r\n                              {$push: [message]})\r\n    this.setState({messages: messages})\r\n  }\r\n\r\n  componentDidMount() {\r\n    App.chatroom = App.cable.subscriptions.create({\r\n      channel: \"ChatroomChannel\",\r\n      id: this.state.chatroomId\r\n      },\r\n      {\r\n        received: function(data) {\r\n          this.updateMessages(JSON.parse(data.message))\r\n        }.bind(this)\r\n      });\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    document.getElementById('messagesBottom').scrollIntoView()\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <MessagesList messages={this.state.messages} />\r\n        <MessageForm chatroomId={this.state.chatroomId} />\r\n      </div>\r\n    )\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}