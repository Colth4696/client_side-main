{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/colthafer/client_side-main/src/Fulfilled.js\";\nimport axios from \"axios\";\nimport React, { Component } from \"react\"; // const FulfilledButton = () => {\n//     const [isfulfilled, setIsFulfilled] = React.useState(false);\n//     const republish = () => {\n//         setIsFulfilled(value => !value);\n// return (\n//     <input\n//         type=\"checkbox\"\n//         checked={isfulfilled}\n//         onChange={republish}\n//     />\n// );\n// }\n// export default FulfilledButton;\n\nclass FulfilledButton extends Component {\n  constructor() {\n    super();\n\n    this.toggleFulfilled = () => {\n      if (this.state.fulfilled = false) {\n        this.setState = {\n          fulfilled: false\n        };\n      } else {\n        this.setState = {\n          fulfilled: true\n        };\n      }\n\n      handleSubmit = event => {\n        event.preventDefault();\n        const {\n          fulfilled,\n          volunteer_id,\n          request_id\n        } = this.state;\n        let status = {\n          volunteer_id: volunteer_id,\n          request_id: request_id,\n          fulfilled: fulfilled\n        };\n        axios.post(\"http://localhost:3003/request_statuses\", {\n          status\n        }, {\n          withCredentials: true\n        }).then(response => {\n          if (response.data.status === 'created') {\n            this.props.status(response.data);\n            this.redirect('/');\n          }\n        }).catch(error => {\n          console.log(\"request error\", error);\n        });\n        event.preventDefault();\n      };\n    };\n\n    this.state = {\n      status: [],\n      fulfilled: false\n    };\n    this.toggleFulfilled = this.toggleFulfilled.bind(this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: (this.toggleFulfilled, this.handleSubmit),\n      children: [\"Fulfill Request\", this.state.status]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nexport default FulfilledButton;","map":{"version":3,"sources":["/Users/colthafer/client_side-main/src/Fulfilled.js"],"names":["axios","React","Component","FulfilledButton","constructor","toggleFulfilled","state","fulfilled","setState","handleSubmit","event","preventDefault","volunteer_id","request_id","status","post","withCredentials","then","response","data","props","redirect","catch","error","console","log","bind","render"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAgC,OAAhC,C,CAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,MAAMC,eAAN,SAA8BD,SAA9B,CAAwC;AACpCE,EAAAA,WAAW,GAAE;AACT;;AADS,SAUbC,eAVa,GAUK,MAClB;AACI,UAAI,KAAKC,KAAL,CAAWC,SAAX,GAAqB,KAAzB,EAA+B;AAC3B,aAAKC,QAAL,GAAiB;AACfD,UAAAA,SAAS,EAAE;AADI,SAAjB;AAGH,OAJD,MAKI;AACD,aAAKC,QAAL,GAAiB;AACdD,UAAAA,SAAS,EAAE;AADG,SAAjB;AAGN;;AAEAE,MAAAA,YAAY,GAAIC,KAAD,IAAW;AAC3BA,QAAAA,KAAK,CAACC,cAAN;AACA,cAAM;AAACJ,UAAAA,SAAD;AAAYK,UAAAA,YAAZ;AAA0BC,UAAAA;AAA1B,YAAwC,KAAKP,KAAnD;AACA,YAAIQ,MAAM,GAAG;AACXF,UAAAA,YAAY,EAAEA,YADH;AAEXC,UAAAA,UAAU,EAAEA,UAFD;AAGXN,UAAAA,SAAS,EAAEA;AAHA,SAAb;AAKIP,QAAAA,KAAK,CAACe,IAAN,CAAW,wCAAX,EAAqD;AAACD,UAAAA;AAAD,SAArD,EAA+D;AAACE,UAAAA,eAAe,EAAE;AAAlB,SAA/D,EACCC,IADD,CACMC,QAAQ,IAAI;AACd,cAAIA,QAAQ,CAACC,IAAT,CAAcL,MAAd,KAAyB,SAA7B,EAAwC;AACxC,iBAAKM,KAAL,CAAWN,MAAX,CAAkBI,QAAQ,CAACC,IAA3B;AACA,iBAAKE,QAAL,CAAc,GAAd;AACH;AACJ,SANG,EAOCC,KAPD,CAOOC,KAAK,IAAI;AACZC,UAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BF,KAA7B;AACH,SATD;AAUAb,QAAAA,KAAK,CAACC,cAAN;AACH,OAnBA;AAoBJ,KA3CgB;;AAER,SAAKL,KAAL,GAAa;AACZQ,MAAAA,MAAM,EAAE,EADI;AAEZP,MAAAA,SAAS,EAAE;AAFC,KAAb;AAKL,SAAKF,eAAL,GAAqB,KAAKA,eAAL,CAAqBqB,IAArB,CAA0B,IAA1B,CAArB;AACC;;AAqCDC,EAAAA,MAAM,GAAE;AACJ,wBAAO;AAAQ,MAAA,OAAO,GAAE,KAAKtB,eAAL,EAAsB,KAAKI,YAA7B,CAAf;AAAA,oCAA0E,KAAKH,KAAL,CAAWQ,MAArF;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAhDmC;;AAmDxC,eAAeX,eAAf","sourcesContent":["import axios from \"axios\";\nimport React, { Component }from \"react\";\n\n// const FulfilledButton = () => {\n//     const [isfulfilled, setIsFulfilled] = React.useState(false);\n//     const republish = () => {\n//         setIsFulfilled(value => !value);\n\n// return (\n//     <input\n//         type=\"checkbox\"\n//         checked={isfulfilled}\n//         onChange={republish}\n//     />\n// );\n// }\n\n// export default FulfilledButton;\n\nclass FulfilledButton extends Component {\n    constructor(){\n        super()\n         this.state = {\n          status: [],\n          fulfilled: false \n    };\n\n    this.toggleFulfilled=this.toggleFulfilled.bind(this)\n    }\n\n    toggleFulfilled = () => \n    {\n        if (this.state.fulfilled=false){\n            this.setState = ({\n              fulfilled: false\n            });\n        }\n        else{\n           this.setState = ({\n              fulfilled: true\n        })\n    }\n  \n     handleSubmit = (event) => {\n    event.preventDefault()\n    const {fulfilled, volunteer_id, request_id} = this.state\n    let status = {\n      volunteer_id: volunteer_id,\n      request_id: request_id,\n      fulfilled: fulfilled\n    }\n        axios.post(\"http://localhost:3003/request_statuses\", {status}, {withCredentials: true})\n        .then(response => {\n            if (response.data.status === 'created') {\n            this.props.status(response.data)\n            this.redirect('/')            \n        }\n    })        \n        .catch(error => {\n            console.log(\"request error\", error);\n        });\n        event.preventDefault();\n    };\n}\n    \n    render(){\n        return <button onClick={this.toggleFulfilled, this.handleSubmit}>Fulfill Request{this.state.status}</button>\n    }\n}\n\nexport default FulfilledButton;\n"]},"metadata":{},"sourceType":"module"}