{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/colthafer/client_side-main/src/Fulfilled.js\";\nimport axios from \"axios\";\nimport React, { Component } from \"react\";\n\nclass FulfilledButton extends Component {\n  constructor() {\n    super();\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      const {\n        request\n      } = this.props;\n      const {\n        volunteer\n      } = this.state;\n      console.log(request);\n      axios.patch(`http://localhost:3003/requests/${request.id} ${volunteer.id}`, {\n        fulfilled: true\n      }, {\n        withCredentials: true\n      }).then(response => {\n        console.log(response);\n\n        if (response.status === 200) {\n          // this.redirect()\n          const updatedRequest = response.data.request;\n          this.props.updateRequest(updatedRequest);\n        }\n      }).catch(error => {\n        console.log(\"request error\", error);\n      });\n      event.preventDefault();\n    };\n\n    this.redirect = () => {\n      window.location.reload();\n    };\n\n    this.refresh = () => {\n      this.setState({});\n    };\n\n    this.state = {\n      fulfilled: false,\n      volunteer: []\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: this.handleSubmit && this.refresh,\n      fulfilled: this.state.fulfilled,\n      children: \"Fulfill Request\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default FulfilledButton;","map":{"version":3,"sources":["/Users/colthafer/client_side-main/src/Fulfilled.js"],"names":["axios","React","Component","FulfilledButton","constructor","handleSubmit","event","preventDefault","request","props","volunteer","state","console","log","patch","id","fulfilled","withCredentials","then","response","status","updatedRequest","data","updateRequest","catch","error","redirect","window","location","reload","refresh","setState","render"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,eAAN,SAA8BD,SAA9B,CAAwC;AACpCE,EAAAA,WAAW,GAAG;AACV;;AADU,SAQdC,YARc,GAQEC,KAAD,IAAW;AACtBA,MAAAA,KAAK,CAACC,cAAN;AACA,YAAM;AAAEC,QAAAA;AAAF,UAAc,KAAKC,KAAzB;AACA,YAAM;AAAEC,QAAAA;AAAF,UAAgB,KAAKC,KAA3B;AAEAC,MAAAA,OAAO,CAACC,GAAR,CAAYL,OAAZ;AACAR,MAAAA,KAAK,CAACc,KAAN,CAAa,kCAAiCN,OAAO,CAACO,EAAG,IAAGL,SAAS,CAACK,EAAG,EAAzE,EAA4E;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAA5E,EAAiG;AAAEC,QAAAA,eAAe,EAAE;AAAnB,OAAjG,EACKC,IADL,CACUC,QAAQ,IAAI;AACdP,QAAAA,OAAO,CAACC,GAAR,CAAYM,QAAZ;;AACA,YAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AACzB;AACA,gBAAMC,cAAc,GAAGF,QAAQ,CAACG,IAAT,CAAcd,OAArC;AACA,eAAKC,KAAL,CAAWc,aAAX,CAAyBF,cAAzB;AACH;AACJ,OARL,EASKG,KATL,CASWC,KAAK,IAAI;AACZb,QAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BY,KAA7B;AACH,OAXL;AAYAnB,MAAAA,KAAK,CAACC,cAAN;AACH,KA3Ba;;AAAA,SA4BdmB,QA5Bc,GA4BH,MAAM;AACbC,MAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACH,KA9Ba;;AAAA,SAgCdC,OAhCc,GAgCJ,MAAM;AACZ,WAAKC,QAAL,CAAc,EAAd;AACH,KAlCa;;AAEV,SAAKpB,KAAL,GAAa;AACTK,MAAAA,SAAS,EAAE,KADF;AAETN,MAAAA,SAAS,EAAE;AAFF,KAAb;AAIH;;AA8BDsB,EAAAA,MAAM,GAAG;AAEL,wBACI;AAAQ,MAAA,OAAO,EAAE,KAAK3B,YAAL,IAAqB,KAAKyB,OAA3C;AAAoD,MAAA,SAAS,EAAE,KAAKnB,KAAL,CAAWK,SAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH;;AA1CmC;;AA8CxC,eAAeb,eAAf","sourcesContent":["import axios from \"axios\";\nimport React, { Component } from \"react\";\n\nclass FulfilledButton extends Component {\n    constructor() {\n        super()\n        this.state = {\n            fulfilled: false,\n            volunteer: []\n        };\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault()\n        const { request } = this.props;\n        const { volunteer } = this.state;\n\n        console.log(request);\n        axios.patch(`http://localhost:3003/requests/${request.id} ${volunteer.id}`, { fulfilled: true }, { withCredentials: true })\n            .then(response => {\n                console.log(response);\n                if (response.status === 200) {\n                    // this.redirect()\n                    const updatedRequest = response.data.request;\n                    this.props.updateRequest(updatedRequest);\n                }\n            })\n            .catch(error => {\n                console.log(\"request error\", error);\n            });\n        event.preventDefault();\n    };\n    redirect = () => {\n        window.location.reload();\n    }\n\n    refresh = () => {\n        this.setState({});\n    }\n\n    render() {\n\n        return (\n            <button onClick={this.handleSubmit && this.refresh} fulfilled={this.state.fulfilled}>Fulfill Request</button>\n        )\n    }\n}\n\n\nexport default FulfilledButton;\n"]},"metadata":{},"sourceType":"module"}