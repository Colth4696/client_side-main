{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/colthafer/client_side-main/src/RequestList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport Republish from \"./Republish\";\nimport moment from \"moment\";\nimport { withRequests } from \"./RequestProvider\";\n\nfunction RequestList(props) {\n  _s();\n\n  const [requests, setRequests] = useState();\n  const [fulfilled, setFulfilled] = useState();\n  const [visible, setVisible] = useState(false);\n  const apiURL = \"http://localhost:3003/requests\";\n\n  const fetchData = async () => {\n    // const response = await axios.get(apiURL)\n    // console.log(response.data)\n    let currentRequests = [];\n    console.log(props.user); // if (response && response.data && response.data.requests && response.data.requests.length > 0) {\n\n    currentRequests = props.requests && props.requests.filter(request => {\n      const allowRepublish = moment(request.updated_at).isBetween(moment().subtract(1, 'days'), moment());\n      return request.user_id === props.user.id && allowRepublish && fulfilled;\n    });\n    console.log(currentRequests);\n    setRequests(currentRequests); // setFulfilled(response.data.fulfilled)\n  };\n\n  React.useEffect(() => {\n    fetchData();\n  }, []); // if (fulfilled === true){\n  //     return(\n  //        null\n  //     )\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"List\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"RequestList\",\n      children: requests && requests.length > 0 ? requests.map((request, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"task\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Request \", index + 1]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Owner ID: \", request.user_id]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [request.title, /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"FilledButton\",\n              children: /*#__PURE__*/_jsxDEV(Republish, {\n                request: request,\n                fulfilled: request.fulfilled\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this);\n      }) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"There are no requests to re-issue at this time.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n\n_s(RequestList, \"U1PV2/Er9jXeWNZEIoqUuqUOkPI=\");\n\n_c = RequestList;\nexport default _c2 = withRequests(RequestList);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"RequestList\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/colthafer/client_side-main/src/RequestList.js"],"names":["React","useState","axios","Republish","moment","withRequests","RequestList","props","requests","setRequests","fulfilled","setFulfilled","visible","setVisible","apiURL","fetchData","currentRequests","console","log","user","filter","request","allowRepublish","updated_at","isBetween","subtract","user_id","id","useEffect","length","map","index","title"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,MAAP,MAAoB,QAApB;AACA,SAASC,YAAT,QAA6B,mBAA7B;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA2B;AAAA;;AACvB,QAAK,CAACC,QAAD,EAAWC,WAAX,IAAyBR,QAAQ,EAAtC;AACA,QAAK,CAACS,SAAD,EAAYC,YAAZ,IAA2BV,QAAQ,EAAxC;AACA,QAAK,CAACW,OAAD,EAAUC,UAAV,IAAuBZ,QAAQ,CAAC,KAAD,CAApC;AAEA,QAAMa,MAAM,GAAG,gCAAf;;AAEA,QAAMC,SAAS,GAAG,YAAY;AAC1B;AACA;AACA,QAAIC,eAAe,GAAG,EAAtB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYX,KAAK,CAACY,IAAlB,EAJ0B,CAK1B;;AACAH,IAAAA,eAAe,GAAGT,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeY,MAAf,CAAsBC,OAAO,IAAI;AACjE,YAAMC,cAAc,GAAGlB,MAAM,CAACiB,OAAO,CAACE,UAAT,CAAN,CAA2BC,SAA3B,CAAqCpB,MAAM,GAAGqB,QAAT,CAAkB,CAAlB,EAAqB,MAArB,CAArC,EAAkErB,MAAM,EAAxE,CAAvB;AACA,aAAOiB,OAAO,CAACK,OAAR,KAAoBnB,KAAK,CAACY,IAAN,CAAWQ,EAA/B,IAAqCL,cAArC,IAAuDZ,SAA9D;AACH,KAHmC,CAApC;AAIAO,IAAAA,OAAO,CAACC,GAAR,CAAYF,eAAZ;AACAP,IAAAA,WAAW,CAACO,eAAD,CAAX,CAX0B,CAY1B;AACC,GAbL;;AAcAhB,EAAAA,KAAK,CAAC4B,SAAN,CAAgB,MAAM;AAClBb,IAAAA,SAAS;AACZ,GAFD,EAEG,EAFH,EArBuB,CAyBvB;AACA;AACA;AACA;AACA;;AACA,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,2BACA;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,gBACKP,QAAQ,IAAIA,QAAQ,CAACqB,MAAT,GAAkB,CAA9B,GAAkCrB,QAAQ,CAACsB,GAAT,CAAa,CAACT,OAAD,EAAUU,KAAV,KAAoB;AAChE,4BACI;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA,kCACI;AAAA,mCAAaA,KAAK,GAAG,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA,qCAAeV,OAAO,CAACK,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA,uBAAKL,OAAO,CAACW,KAAb,eACA;AAAK,cAAA,SAAS,EAAC,cAAf;AAAA,qCACI,QAAC,SAAD;AAAY,gBAAA,OAAO,EAAEX,OAArB;AAA8B,gBAAA,SAAS,EAAEA,OAAO,CAACX;AAAjD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBADA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ;AAAA,WAA2BqB,KAA3B;AAAA;AAAA;AAAA;AAAA,gBADJ;AAYH,OAbkC,CAAlC,gBAeL;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,+BACgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADhB;AAAA;AAAA;AAAA;AAAA;AAhBA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADJ;AAyBH;;GAvDQzB,W;;KAAAA,W;AAyDT,qBAAeD,YAAY,CAACC,WAAD,CAA3B","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport Republish from \"./Republish\";\nimport moment from  \"moment\";\nimport { withRequests } from \"./RequestProvider\";\n\nfunction RequestList(props){\n    const[requests, setRequests]= useState();\n    const[fulfilled, setFulfilled]= useState();\n    const[visible, setVisible]= useState(false);\n\n    const apiURL = \"http://localhost:3003/requests\"; \n\n    const fetchData = async () => {\n        // const response = await axios.get(apiURL)\n        // console.log(response.data)\n        let currentRequests = [];\n        console.log(props.user);\n        // if (response && response.data && response.data.requests && response.data.requests.length > 0) {\n        currentRequests = props.requests && props.requests.filter(request => {\n            const allowRepublish = moment(request.updated_at).isBetween(moment().subtract(1, 'days'),moment());\n            return request.user_id === props.user.id && allowRepublish && fulfilled;\n        });\n        console.log(currentRequests);\n        setRequests(currentRequests)\n        // setFulfilled(response.data.fulfilled)\n        }\n    React.useEffect(() => {\n        fetchData();\n    }, []) \n\n    // if (fulfilled === true){\n    //     return(\n    //        null\n    //     )\n    // }\n    return(\n        <div className=\"List\">\n        <div className=\"RequestList\">\n            {requests && requests.length > 0 ? requests.map((request, index) => {\n                return(\n                    <div className=\"task\" key={index}>\n                        <h3>Request {index + 1}</h3>\n                        <h3>Owner ID: {request.user_id}</h3>\n                        <h2>{request.title}\n                        <div className=\"FilledButton\">\n                            <Republish  request={request} fulfilled={request.fulfilled} />\n                        </div>\n                        </h2>\n                    </div>\n\n                )\n            })\n        :\n        <div className=\"task\">\n                        <h3>There are no requests to re-issue at this time.</h3>\n        </div>\n}\n        </div>\n        </div>\n    )\n}\n\nexport default withRequests(RequestList);"]},"metadata":{},"sourceType":"module"}