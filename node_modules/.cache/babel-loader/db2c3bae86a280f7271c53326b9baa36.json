{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/colthafer/client_side-main/src/Fulfilled.js\";\nimport axios from \"axios\";\nimport React, { Component } from \"react\"; // const FulfilledButton = () => {\n//     const [isfulfilled, setIsFulfilled] = React.useState(false);\n//     const republish = () => {\n//         setIsFulfilled(value => !value);\n// return (\n//     <input\n//         type=\"checkbox\"\n//         checked={isfulfilled}\n//         onChange={republish}\n//     />\n// );\n// }\n// export default FulfilledButton;\n\nclass FulfilledButton extends Component {\n  constructor() {\n    super();\n\n    this.toggleFulfilled = () => {\n      if (this.state.fulfilled = false) {\n        this.setState = {\n          fulfilled: false\n        };\n      } else {\n        this.setState = {\n          fulfilled: true\n        };\n      }\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      this.toggleFulfilled();\n      const {\n        fulfilled\n      } = this.state;\n      const {\n        request,\n        volunteer\n      } = this.props;\n      let status = {\n        volunteer_id: volunteer.id,\n        request_id: request.id,\n        fulfilled: fulfilled\n      };\n      axios.post(\"http://localhost:3003/statuses\", {\n        status\n      }, {\n        withCredentials: true\n      }).then(response => {\n        if (response.data.status === 'created') {\n          this.props.status(response.data);\n          this.redirect('/');\n        }\n      }).catch(error => {\n        console.log(\"request error\", error);\n      });\n      event.preventDefault();\n    };\n\n    this.state = {\n      status: [],\n      fulfilled: false\n    };\n    this.toggleFulfilled = this.toggleFulfilled.bind(this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: this.handleSubmit,\n      children: [\"Fulfill Request\", this.state.status]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nexport default FulfilledButton;","map":{"version":3,"sources":["/Users/colthafer/client_side-main/src/Fulfilled.js"],"names":["axios","React","Component","FulfilledButton","constructor","toggleFulfilled","state","fulfilled","setState","handleSubmit","event","preventDefault","request","volunteer","props","status","volunteer_id","id","request_id","post","withCredentials","then","response","data","redirect","catch","error","console","log","bind","render"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAgC,OAAhC,C,CAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,MAAMC,eAAN,SAA8BD,SAA9B,CAAwC;AACpCE,EAAAA,WAAW,GAAE;AACT;;AADS,SAUbC,eAVa,GAUK,MAClB;AACI,UAAI,KAAKC,KAAL,CAAWC,SAAX,GAAqB,KAAzB,EAA+B;AAC3B,aAAKC,QAAL,GAAiB;AACfD,UAAAA,SAAS,EAAE;AADI,SAAjB;AAGH,OAJD,MAKI;AACD,aAAKC,QAAL,GAAiB;AACdD,UAAAA,SAAS,EAAE;AADG,SAAjB;AAGN;AACJ,KAtBgB;;AAAA,SAwBZE,YAxBY,GAwBIC,KAAD,IAAW;AAC3BA,MAAAA,KAAK,CAACC,cAAN;AACA,WAAKN,eAAL;AACA,YAAM;AAACE,QAAAA;AAAD,UAAc,KAAKD,KAAzB;AACA,YAAM;AAAEM,QAAAA,OAAF;AAAWC,QAAAA;AAAX,UAAyB,KAAKC,KAApC;AACA,UAAIC,MAAM,GAAG;AACXC,QAAAA,YAAY,EAAEH,SAAS,CAACI,EADb;AAEXC,QAAAA,UAAU,EAAEN,OAAO,CAACK,EAFT;AAGXV,QAAAA,SAAS,EAAEA;AAHA,OAAb;AAKIP,MAAAA,KAAK,CAACmB,IAAN,CAAW,gCAAX,EAA6C;AAACJ,QAAAA;AAAD,OAA7C,EAAuD;AAACK,QAAAA,eAAe,EAAE;AAAlB,OAAvD,EACCC,IADD,CACMC,QAAQ,IAAI;AACd,YAAIA,QAAQ,CAACC,IAAT,CAAcR,MAAd,KAAyB,SAA7B,EAAwC;AACxC,eAAKD,KAAL,CAAWC,MAAX,CAAkBO,QAAQ,CAACC,IAA3B;AACA,eAAKC,QAAL,CAAc,GAAd;AACH;AACJ,OANG,EAOCC,KAPD,CAOOC,KAAK,IAAI;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BF,KAA7B;AACH,OATD;AAUAhB,MAAAA,KAAK,CAACC,cAAN;AACH,KA7CY;;AAER,SAAKL,KAAL,GAAa;AACZS,MAAAA,MAAM,EAAE,EADI;AAEZR,MAAAA,SAAS,EAAE;AAFC,KAAb;AAKL,SAAKF,eAAL,GAAqB,KAAKA,eAAL,CAAqBwB,IAArB,CAA0B,IAA1B,CAArB;AACC;;AAwCDC,EAAAA,MAAM,GAAE;AACJ,wBAAO;AAAQ,MAAA,OAAO,EAAE,KAAKrB,YAAtB;AAAA,oCAAoD,KAAKH,KAAL,CAAWS,MAA/D;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAnDmC;;AAsDxC,eAAeZ,eAAf","sourcesContent":["import axios from \"axios\";\nimport React, { Component }from \"react\";\n\n// const FulfilledButton = () => {\n//     const [isfulfilled, setIsFulfilled] = React.useState(false);\n//     const republish = () => {\n//         setIsFulfilled(value => !value);\n\n// return (\n//     <input\n//         type=\"checkbox\"\n//         checked={isfulfilled}\n//         onChange={republish}\n//     />\n// );\n// }\n\n// export default FulfilledButton;\n\nclass FulfilledButton extends Component {\n    constructor(){\n        super()\n         this.state = {\n          status: [],\n          fulfilled: false \n    };\n\n    this.toggleFulfilled=this.toggleFulfilled.bind(this)\n    }\n\n    toggleFulfilled = () => \n    {\n        if (this.state.fulfilled=false){\n            this.setState = ({\n              fulfilled: false\n            });\n        }\n        else{\n           this.setState = ({\n              fulfilled: true\n        })\n    }\n}\n  \n     handleSubmit = (event) => {\n    event.preventDefault();\n    this.toggleFulfilled();\n    const {fulfilled} = this.state\n    const { request, volunteer } = this.props\n    let status = {\n      volunteer_id: volunteer.id,\n      request_id: request.id,\n      fulfilled: fulfilled\n    }\n        axios.post(\"http://localhost:3003/statuses\", {status}, {withCredentials: true})\n        .then(response => {\n            if (response.data.status === 'created') {\n            this.props.status(response.data)\n            this.redirect('/')            \n        }\n    })        \n        .catch(error => {\n            console.log(\"request error\", error);\n        });\n        event.preventDefault();\n    }\n\n    \n    render(){\n        return <button onClick={this.handleSubmit}>Fulfill Request{this.state.status}</button>\n    }\n}\n\nexport default FulfilledButton;\n"]},"metadata":{},"sourceType":"module"}