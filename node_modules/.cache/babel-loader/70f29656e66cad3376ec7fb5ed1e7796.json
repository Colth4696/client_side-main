{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/colthafer/client_side-main/src/Fulfilled.js\";\nimport axios from \"axios\";\nimport React, { Component } from \"react\"; // const FulfilledButton = () => {\n// const [isfulfilled, setIsFulfilled] = React.useState(false);\n// const republish = () => {\n// setIsFulfilled(value => !value);\n// return (\n// <input\n// type=\"checkbox\"\n// checked={isfulfilled}\n// onChange={republish}\n// />\n// );\n// }\n// export default FulfilledButton;\n\nclass FulfilledButton extends Component {\n  constructor() {\n    super();\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      const {\n        request\n      } = this.props;\n      const {\n        volunteer\n      } = this.state;\n      console.log(request);\n      axios.patch(`http://localhost:3003/requests/${request.id} ${volunteer.id}`, {\n        fulfilled: true\n      }, {\n        withCredentials: true\n      }).then(response => {\n        console.log(response);\n\n        if (response.status === 200) {\n          // this.redirect()\n          const updatedRequest = response.data.request;\n          this.props.updateRequest(updatedRequest);\n        }\n      }).catch(error => {\n        console.log(\"request error\", error);\n      });\n      event.preventDefault();\n    };\n\n    this.redirect = () => {\n      window.location.reload();\n    };\n\n    this.state = {\n      fulfilled: false,\n      volunteer: []\n    }; // this.toggleFulfilled=this.toggleFulfilled.bind(this)\n  } // toggleFulfilled = () => {\n  // const { fulfilled } = this.state;\n  // this.setState({fulfilled: !fulfilled});\n  // }\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: this.handleSubmit,\n      fulfilled: this.state.fulfilled,\n      children: \"Fulfill Request\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default FulfilledButton;","map":{"version":3,"sources":["/Users/colthafer/client_side-main/src/Fulfilled.js"],"names":["axios","React","Component","FulfilledButton","constructor","handleSubmit","event","preventDefault","request","props","volunteer","state","console","log","patch","id","fulfilled","withCredentials","then","response","status","updatedRequest","data","updateRequest","catch","error","redirect","window","location","reload","render"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAgC,OAAhC,C,CAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,MAAMC,eAAN,SAA8BD,SAA9B,CAAwC;AACxCE,EAAAA,WAAW,GAAE;AACb;;AADa,SAebC,YAfa,GAeGC,KAAD,IAAW;AAC1BA,MAAAA,KAAK,CAACC,cAAN;AACA,YAAM;AAAEC,QAAAA;AAAF,UAAc,KAAKC,KAAzB;AACA,YAAM;AAAEC,QAAAA;AAAF,UAAgB,KAAKC,KAA3B;AAEAC,MAAAA,OAAO,CAACC,GAAR,CAAYL,OAAZ;AACAR,MAAAA,KAAK,CAACc,KAAN,CAAa,kCAAiCN,OAAO,CAACO,EAAG,IAAGL,SAAS,CAACK,EAAG,EAAzE,EAA4E;AAACC,QAAAA,SAAS,EAAE;AAAZ,OAA5E,EAA+F;AAACC,QAAAA,eAAe,EAAE;AAAlB,OAA/F,EACCC,IADD,CACMC,QAAQ,IAAI;AAClBP,QAAAA,OAAO,CAACC,GAAR,CAAYM,QAAZ;;AACA,YAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC7B;AACA,gBAAMC,cAAc,GAAGF,QAAQ,CAACG,IAAT,CAAcd,OAArC;AACA,eAAKC,KAAL,CAAWc,aAAX,CAAyBF,cAAzB;AACC;AACA,OARD,EASCG,KATD,CASOC,KAAK,IAAI;AAChBb,QAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BY,KAA7B;AACC,OAXD;AAYAnB,MAAAA,KAAK,CAACC,cAAN;AACC,KAlCY;;AAAA,SAmCbmB,QAnCa,GAmCF,MAAM;AACbC,MAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACH,KArCY;;AAEb,SAAKlB,KAAL,GAAa;AACbK,MAAAA,SAAS,EAAE,KADE;AAEbN,MAAAA,SAAS,EAAE;AAFE,KAAb,CAFa,CAOb;AACC,GATuC,CAWxC;AACA;AACA;AACA;;;AA0BAoB,EAAAA,MAAM,GAAG;AAEL,wBACI;AAAQ,MAAA,OAAO,EAAE,KAAKzB,YAAtB;AAAqC,MAAA,SAAS,EAAE,KAAKM,KAAL,CAAWK,SAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH;;AA7CuC;;AAiDxC,eAAeb,eAAf","sourcesContent":["import axios from \"axios\";\nimport React, { Component }from \"react\";\n\n// const FulfilledButton = () => {\n// const [isfulfilled, setIsFulfilled] = React.useState(false);\n// const republish = () => {\n// setIsFulfilled(value => !value);\n\n// return (\n// <input\n// type=\"checkbox\"\n// checked={isfulfilled}\n// onChange={republish}\n// />\n// );\n// }\n\n// export default FulfilledButton;\n\nclass FulfilledButton extends Component {\nconstructor(){\nsuper()\nthis.state = {\nfulfilled: false,\nvolunteer: []\n};\n\n// this.toggleFulfilled=this.toggleFulfilled.bind(this)\n}\n\n// toggleFulfilled = () => {\n// const { fulfilled } = this.state;\n// this.setState({fulfilled: !fulfilled});\n// }\n\nhandleSubmit = (event) => {\nevent.preventDefault()\nconst { request } = this.props;\nconst { volunteer } = this.state;\n\nconsole.log(request);\naxios.patch(`http://localhost:3003/requests/${request.id} ${volunteer.id}`, {fulfilled: true}, {withCredentials: true})\n.then(response => {\nconsole.log(response);\nif (response.status === 200) {\n// this.redirect()\nconst updatedRequest = response.data.request;\nthis.props.updateRequest(updatedRequest);\n}\n})\n.catch(error => {\nconsole.log(\"request error\", error);\n});\nevent.preventDefault();\n};\nredirect = () => {\n    window.location.reload();\n}\n\nrender() {\n\n    return(\n        <button onClick={this.handleSubmit}  fulfilled={this.state.fulfilled}>Fulfill Request</button>  \n    )\n}\n}\n\n\nexport default FulfilledButton;\n"]},"metadata":{},"sourceType":"module"}