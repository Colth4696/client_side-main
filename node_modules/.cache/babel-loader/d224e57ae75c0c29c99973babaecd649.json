{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/colthafer/client_side-main/src/RequestForm.js\";\nimport React, { Component } from \"react\";\nimport Geosuggest from 'react-geosuggest';\nimport axios from \"axios\";\nimport './RequestForm.css';\n\nclass RequestForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      const {\n        name,\n        value\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      const {\n        title,\n        description,\n        latitude,\n        longitude,\n        category\n      } = this.state;\n      let request = {\n        title: title,\n        description: description,\n        latitude: latitude,\n        longitude: longitude,\n        category: category\n      };\n      axios.post(\"http://localhost:3003/requests\", {\n        request\n      }, {\n        withCredentials: true\n      }).then(response => {\n        if (response.data.status === 'created') {\n          this.redirect();\n        }\n      }).catch(error => {\n        console.error(\"request error\", error);\n      });\n      event.preventDefault();\n    };\n\n    this.redirect = () => {\n      window.location.reload();\n    };\n\n    this.onSuggestSelect = suggest => {\n      if (suggest) {\n        const {\n          location\n        } = suggest;\n        this.setState({\n          latitude: location.lat,\n          longitude: location.lng\n        });\n      }\n    };\n\n    this.geosuggestEl = /*#__PURE__*/React.createRef();\n    this.onSuggestSelect = this.onSuggestSelect.bind(this);\n    this.state = {\n      title: \"\",\n      description: \"\",\n      address: \"\",\n      latitude: \"\",\n      longitude: \"\",\n      category: \"\"\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Task\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"title\",\n          placeholder: \"Title\",\n          value: this.state.title,\n          onChange: this.handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"description\",\n          placeholder: \"Description\",\n          value: this.state.description,\n          onChange: this.handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Geosuggest, {\n          ref: this.geosuggestEl,\n          onSuggestSelect: this.onSuggestSelect\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"category\",\n            placeholder: \"Material\",\n            value: this.state.category,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: this.handleSubmit,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default RequestForm;","map":{"version":3,"sources":["/Users/colthafer/client_side-main/src/RequestForm.js"],"names":["React","Component","Geosuggest","axios","RequestForm","constructor","props","handleChange","event","name","value","target","setState","handleSubmit","preventDefault","title","description","latitude","longitude","category","state","request","post","withCredentials","then","response","data","status","redirect","catch","error","console","window","location","reload","onSuggestSelect","suggest","lat","lng","geosuggestEl","createRef","bind","address","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Geosuggest from 'react-geosuggest';\r\nimport axios from \"axios\"\r\nimport './RequestForm.css';\r\n\r\nclass RequestForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.geosuggestEl = React.createRef();\r\n        this.onSuggestSelect = this.onSuggestSelect.bind(this);\r\n        this.state = {\r\n            title: \"\",\r\n            description: \"\",\r\n            address: \"\",\r\n            latitude: \"\",\r\n            longitude: \"\",\r\n            category: \"\"\r\n        };\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        const { name, value } = event.target\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    };\r\n    handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        const { title, description, latitude, longitude, category } = this.state\r\n        let request = {\r\n            title: title,\r\n            description: description,\r\n            latitude: latitude,\r\n            longitude: longitude,\r\n            category: category\r\n        }\r\n\r\n        axios.post(\"http://localhost:3003/requests\", { request },\r\n            { withCredentials: true }\r\n        )\r\n            .then(response => {\r\n                if (response.data.status === 'created') {\r\n                    this.redirect()\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.error(\"request error\", error);\r\n            });\r\n        event.preventDefault();\r\n    };\r\n    redirect = () => {\r\n        window.location.reload();\r\n    }\r\n    onSuggestSelect = (suggest) => {\r\n        if (suggest) {\r\n            const { location } = suggest;\r\n            this.setState({ latitude: location.lat, longitude: location.lng });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Task\">\r\n                <form>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"title\"\r\n                        placeholder=\"Title\"\r\n                        value={this.state.title}\r\n                        onChange={this.handleChange}\r\n                        required\r\n                    />\r\n\r\n                    <br />\r\n\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"description\"\r\n                        placeholder=\"Description\"\r\n                        value={this.state.description}\r\n                        onChange={this.handleChange}\r\n                        required\r\n                    />\r\n\r\n                    <br />\r\n\r\n                    <Geosuggest\r\n                        ref={this.geosuggestEl}\r\n                        onSuggestSelect={this.onSuggestSelect}\r\n                    />\r\n\r\n                    <br />\r\n\r\n                    {/* <input\r\ntype=\"decimal\"\r\nname=\"longitude\"\r\nplaceholder=\"Longitude\"\r\nvalue={this.state.longitude}\r\nonChange={this.handleChange}\r\nrequired\r\n/> */}\r\n\r\n                    <br />\r\n\r\n                    <div>\r\n\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"category\"\r\n                            placeholder=\"Material\"\r\n                            value={this.state.category}\r\n                            onChange={this.handleChange} />\r\n                    </div>\r\n\r\n                    <br />\r\n\r\n                    <button type=\"button\" onClick={this.handleSubmit}>Submit</button>\r\n\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RequestForm"]},"metadata":{},"sourceType":"module"}