{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/colthafer/client_side-main/src/MapContainer.js\";\nimport React from \"react\";\nimport { compose, withProps } from \"recompose\";\nimport { withScriptjs, withGoogleMap, GoogleMap } from \"react-google-maps\";\nimport \"./MapApi.css\";\nimport RequestMarkers from \"./RequestMarkers\";\n\nconst getCurrentLocation = () => {\n  if (navigator.geolocation) {\n    return navigator.geolocation.getCurrentPosition(showPosition);\n  } else {\n    return {\n      lat: 39.889986,\n      lng: -104.948516\n    };\n  }\n};\n\nconst showPosition = position => {\n  return {\n    lat: position.coords.latitude,\n    lng: position.coords.longitude\n  };\n};\n\nconst MyMapComponent = compose(withProps({\n  googleMapURL: \"https://maps.googleapis.com/maps/api/js?key=AIzaSyB465RpcGT8xIHfVYXmsDZP657fvRgqQr0\",\n  loadingElement: /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: `100%`\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 25\n  }, this),\n  containerElement: /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: `450px`\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 27\n  }, this),\n  mapElement: /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: `100%`,\n      width: '70%'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 21\n  }, this)\n}), withScriptjs, withGoogleMap)(props => /*#__PURE__*/_jsxDEV(GoogleMap, {\n  defaultZoom: 18,\n  defaultCenter: getCurrentLocation,\n  children: /*#__PURE__*/_jsxDEV(RequestMarkers, {\n    request: props.request,\n    user: props.user\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 30,\n  columnNumber: 5\n}, this));\nexport default MyMapComponent;","map":{"version":3,"sources":["/Users/colthafer/client_side-main/src/MapContainer.js"],"names":["React","compose","withProps","withScriptjs","withGoogleMap","GoogleMap","RequestMarkers","getCurrentLocation","navigator","geolocation","getCurrentPosition","showPosition","lat","lng","position","coords","latitude","longitude","MyMapComponent","googleMapURL","loadingElement","height","containerElement","mapElement","width","props","request","user"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,EAAkBC,SAAlB,QAAmC,WAAnC;AACA,SAASC,YAAT,EAAuBC,aAAvB,EAAsCC,SAAtC,QAAuD,mBAAvD;AACA,OAAO,cAAP;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;AAEA,MAAMC,kBAAkB,GAAG,MAAM;AAC7B,MAAKC,SAAS,CAACC,WAAf,EAA4B;AACxB,WAAOD,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyCC,YAAzC,CAAP;AACH,GAFD,MAEO;AACL,WAAO;AAAEC,MAAAA,GAAG,EAAE,SAAP;AAAkBC,MAAAA,GAAG,EAAE,CAAC;AAAxB,KAAP;AACD;AACJ,CAND;;AAQA,MAAMF,YAAY,GAAIG,QAAD,IAAc;AAC/B,SAAO;AAAEF,IAAAA,GAAG,EAAEE,QAAQ,CAACC,MAAT,CAAgBC,QAAvB;AAAiCH,IAAAA,GAAG,EAAEC,QAAQ,CAACC,MAAT,CAAgBE;AAAtD,GAAP;AACH,CAFD;;AAIA,MAAMC,cAAc,GAAGjB,OAAO,CAC1BC,SAAS,CAAC;AACNiB,EAAAA,YAAY,EAAE,qFADR;AAENC,EAAAA,cAAc,eAAE;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAG;AAAX;AAAZ;AAAA;AAAA;AAAA;AAAA,UAFV;AAGNC,EAAAA,gBAAgB,eAAE;AAAK,IAAA,KAAK,EAAE;AAAED,MAAAA,MAAM,EAAG;AAAX;AAAZ;AAAA;AAAA;AAAA;AAAA,UAHZ;AAINE,EAAAA,UAAU,eAAE;AAAK,IAAA,KAAK,EAAE;AAAEF,MAAAA,MAAM,EAAG,MAAX;AAAkBG,MAAAA,KAAK,EAAE;AAAzB;AAAZ;AAAA;AAAA;AAAA;AAAA;AAJN,CAAD,CADiB,EAO1BrB,YAP0B,EAQ1BC,aAR0B,CAAP,CASpBqB,KAAD,iBAEE,QAAC,SAAD;AACI,EAAA,WAAW,EAAE,EADjB;AAEI,EAAA,aAAa,EAAElB,kBAFnB;AAAA,yBAGI,QAAC,cAAD;AAAgB,IAAA,OAAO,EAAEkB,KAAK,CAACC,OAA/B;AAAwC,IAAA,IAAI,EAAED,KAAK,CAACE;AAApD;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,QAXmB,CAAvB;AAoBA,eAAeT,cAAf","sourcesContent":["import React from \"react\"\r\nimport { compose, withProps } from \"recompose\"\r\nimport { withScriptjs, withGoogleMap, GoogleMap } from \"react-google-maps\"\r\nimport \"./MapApi.css\";\r\nimport RequestMarkers from \"./RequestMarkers\";\r\n\r\nconst getCurrentLocation = () => {\r\n    if  (navigator.geolocation) {\r\n        return navigator.geolocation.getCurrentPosition(showPosition);\r\n    } else {\r\n      return { lat: 39.889986, lng: -104.948516 };\r\n    }\r\n}\r\n\r\nconst showPosition = (position) => {\r\n    return { lat: position.coords.latitude, lng: position.coords.longitude };\r\n}\r\n\r\nconst MyMapComponent = compose(\r\n    withProps({\r\n        googleMapURL: \"https://maps.googleapis.com/maps/api/js?key=AIzaSyB465RpcGT8xIHfVYXmsDZP657fvRgqQr0\",\r\n        loadingElement: <div style={{ height: `100%` }} />,\r\n        containerElement: <div style={{ height: `450px` }} />,\r\n        mapElement: <div style={{ height: `100%`, width: '70%' }} />,\r\n    }),\r\n    withScriptjs,\r\n    withGoogleMap\r\n)((props) =>\r\n\r\n    <GoogleMap\r\n        defaultZoom={18}\r\n        defaultCenter={getCurrentLocation}>\r\n        <RequestMarkers request={props.request} user={props.user} />\r\n    </GoogleMap>\r\n\r\n)\r\n\r\n\r\nexport default MyMapComponent"]},"metadata":{},"sourceType":"module"}