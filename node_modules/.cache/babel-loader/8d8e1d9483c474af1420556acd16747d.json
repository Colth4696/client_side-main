{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/colthafer/client_side-main/src/RequestMarkers.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport MyMarker from \"./MyMarker\";\nimport { useRequestState } from \"./RequestStateProvider\";\n\nconst RequestMarkers = props => {\n  _s();\n\n  const [state, dispatch] = useRequestState();\n  const [requests, setRequests] = React.useState();\n  React.useEffect(() => {\n    let currentRequests = state.requests && state.requests.filter(req => !req.fulfilled);\n    setRequests(currentRequests);\n  }, [state]);\n\n  const fulfillRequest = request => {\n    const allRequests = state.requests;\n\n    for (let index = 0; index < allRequests.length; index++) {\n      if (allRequests[index].id === request.id) {\n        allRequests[index] = request;\n        break;\n      }\n    }\n\n    dispatch({\n      type: \"UPDATE_REQUESTS\",\n      requests: allRequests\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: requests && requests.map(request => {\n      return /*#__PURE__*/_jsxDEV(MyMarker, {\n        position: {\n          lat: +request.latitude,\n          lng: +request.longitude\n        },\n        title: request.title,\n        description: request.description,\n        request: request,\n        request_id: request.id,\n        user: props.user,\n        fulfillRequest: fulfillRequest\n      }, request.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RequestMarkers, \"695MCCe8/Aeb5px9s4hirp6x8e4=\", false, function () {\n  return [useRequestState];\n});\n\n_c = RequestMarkers;\nexport default RequestMarkers;\n\nvar _c;\n\n$RefreshReg$(_c, \"RequestMarkers\");","map":{"version":3,"sources":["/Users/colthafer/client_side-main/src/RequestMarkers.js"],"names":["React","MyMarker","useRequestState","RequestMarkers","props","state","dispatch","requests","setRequests","useState","useEffect","currentRequests","filter","req","fulfilled","fulfillRequest","request","allRequests","index","length","id","type","map","lat","latitude","lng","longitude","title","description","user"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,eAAT,QAAgC,wBAAhC;;AAEA,MAAMC,cAAc,GAAIC,KAAD,IAAW;AAAA;;AAChC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,eAAe,EAAzC;AACA,QAAM,CAACK,QAAD,EAAWC,WAAX,IAA0BR,KAAK,CAACS,QAAN,EAAhC;AAEAT,EAAAA,KAAK,CAACU,SAAN,CAAgB,MAAM;AACpB,QAAIC,eAAe,GAAGN,KAAK,CAACE,QAAN,IAAkBF,KAAK,CAACE,QAAN,CAAeK,MAAf,CAAsBC,GAAG,IAAI,CAACA,GAAG,CAACC,SAAlC,CAAxC;AACAN,IAAAA,WAAW,CAACG,eAAD,CAAX;AACD,GAHD,EAGG,CAACN,KAAD,CAHH;;AAKA,QAAMU,cAAc,GAAIC,OAAD,IAAa;AAClC,UAAMC,WAAW,GAAGZ,KAAK,CAACE,QAA1B;;AACA,SAAK,IAAIW,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGD,WAAW,CAACE,MAAxC,EAAgDD,KAAK,EAArD,EAAyD;AACvD,UAAID,WAAW,CAACC,KAAD,CAAX,CAAmBE,EAAnB,KAA0BJ,OAAO,CAACI,EAAtC,EAA0C;AACxCH,QAAAA,WAAW,CAACC,KAAD,CAAX,GAAqBF,OAArB;AACA;AACD;AACF;;AACDV,IAAAA,QAAQ,CAAC;AAAEe,MAAAA,IAAI,EAAE,iBAAR;AAA2Bd,MAAAA,QAAQ,EAAEU;AAArC,KAAD,CAAR;AACD,GATD;;AAWA,sBACE;AAAA,cACGV,QAAQ,IAAIA,QAAQ,CAACe,GAAT,CAAaN,OAAO,IAAI;AACnC,0BAAQ,QAAC,QAAD;AAAU,QAAA,QAAQ,EAAE;AAAEO,UAAAA,GAAG,EAAE,CAACP,OAAO,CAACQ,QAAhB;AAA0BC,UAAAA,GAAG,EAAE,CAACT,OAAO,CAACU;AAAxC,SAApB;AACN,QAAA,KAAK,EAAEV,OAAO,CAACW,KADT;AAEN,QAAA,WAAW,EAAEX,OAAO,CAACY,WAFf;AAGN,QAAA,OAAO,EAAEZ,OAHH;AAKN,QAAA,UAAU,EAAEA,OAAO,CAACI,EALd;AAMN,QAAA,IAAI,EAAEhB,KAAK,CAACyB,IANN;AAON,QAAA,cAAc,EAAEd;AAPV,SAIDC,OAAO,CAACI,EAJP;AAAA;AAAA;AAAA;AAAA,cAAR;AAQD,KATY;AADf;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CAnCD;;GAAMjB,c;UACsBD,e;;;KADtBC,c;AAqCN,eAAeA,cAAf","sourcesContent":["import React from \"react\";\r\nimport MyMarker from \"./MyMarker\"\r\nimport { useRequestState } from \"./RequestStateProvider\";\r\n\r\nconst RequestMarkers = (props) => {\r\n  const [state, dispatch] = useRequestState();\r\n  const [requests, setRequests] = React.useState();\r\n\r\n  React.useEffect(() => {\r\n    let currentRequests = state.requests && state.requests.filter(req => !req.fulfilled);\r\n    setRequests(currentRequests);\r\n  }, [state])\r\n\r\n  const fulfillRequest = (request) => {\r\n    const allRequests = state.requests;\r\n    for (let index = 0; index < allRequests.length; index++) {\r\n      if (allRequests[index].id === request.id) {\r\n        allRequests[index] = request;\r\n        break;\r\n      }\r\n    }\r\n    dispatch({ type: \"UPDATE_REQUESTS\", requests: allRequests });\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {requests && requests.map(request => {\r\n        return (<MyMarker position={{ lat: +request.latitude, lng: +request.longitude }}\r\n          title={request.title}\r\n          description={request.description}\r\n          request={request}\r\n          key={request.id}\r\n          request_id={request.id}\r\n          user={props.user}\r\n          fulfillRequest={fulfillRequest} />)\r\n      })\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RequestMarkers;"]},"metadata":{},"sourceType":"module"}