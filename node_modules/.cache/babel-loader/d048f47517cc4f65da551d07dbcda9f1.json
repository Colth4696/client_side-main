{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/colthafer/client_side-main/src/RequestList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport Republish from \"./Republish\";\nimport moment from \"moment\";\n\nfunction RequestList(props) {\n  _s();\n\n  const [requests, setRequests] = useState();\n  const [fulfilled, setFulfilled] = useState();\n  const [visible, setVisible] = useState(false);\n  const apiURL = \"http://localhost:3003/requests\";\n\n  const fetchData = async () => {\n    const response = await axios.get(apiURL);\n    console.log(response.data);\n    let currentRequests = [];\n    console.log(props.user);\n\n    if (response && response.data && response.data.requests && response.data.requests.length > 0) {\n      currentRequests = response.data.requests.filter(request => {\n        const allowRepublish = moment(request.updated_at).isBetween(moment().subtract(1, 'days'), moment());\n        return request.user_id === props.user.id && allowRepublish;\n      });\n    }\n\n    console.log(currentRequests);\n    setRequests(currentRequests);\n    setFulfilled(response.data.fulfilled);\n  };\n\n  React.useEffect(() => {\n    fetchData();\n  }, []);\n\n  if (fulfilled === true) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"List\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"RequestList\",\n      children: requests && requests.length > 0 ? requests.map((request, index, fulfilled) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"task\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Request \", index + 1]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Owner ID: \", request.user_id]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [request.title, /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"FilledButton\",\n              children: /*#__PURE__*/_jsxDEV(Republish, {\n                request: request,\n                fulfilled: fulfilled\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this);\n      }) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"There are no requests to re-issue at this time.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n\n_s(RequestList, \"U1PV2/Er9jXeWNZEIoqUuqUOkPI=\");\n\n_c = RequestList;\nexport default RequestList;\n\nvar _c;\n\n$RefreshReg$(_c, \"RequestList\");","map":{"version":3,"sources":["/Users/colthafer/client_side-main/src/RequestList.js"],"names":["React","useState","axios","Republish","moment","RequestList","props","requests","setRequests","fulfilled","setFulfilled","visible","setVisible","apiURL","fetchData","response","get","console","log","data","currentRequests","user","length","filter","request","allowRepublish","updated_at","isBetween","subtract","user_id","id","useEffect","map","index","title"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport Republish from \"./Republish\";\nimport moment from  \"moment\";\n\nfunction RequestList(props){\n    const[requests, setRequests]= useState();\n    const[fulfilled, setFulfilled]= useState();\n    const[visible, setVisible]= useState(false);\n\n    const apiURL = \"http://localhost:3003/requests\"; \n\n    const fetchData = async () => {\n        const response = await axios.get(apiURL)\n        console.log(response.data)\n        let currentRequests = [];\n        console.log(props.user);\n        if (response && response.data && response.data.requests && response.data.requests.length > 0) {\n        currentRequests = response.data.requests.filter(request => {\n            const allowRepublish = moment(request.updated_at).isBetween(moment().subtract(1, 'days'),moment());\n            return request.user_id === props.user.id && allowRepublish;\n        });\n    }\n        console.log(currentRequests);\n        setRequests(currentRequests)\n        setFulfilled(response.data.fulfilled)\n        }\n    React.useEffect(() => {\n        fetchData();\n    }, []) \n\n    if (fulfilled === true){\n        return(\n           null\n        )\n    }\n    return(\n        <div className=\"List\">\n        <div className=\"RequestList\">\n            {requests && requests.length > 0 ? requests.map((request, index, fulfilled) => {\n                return(\n                    <div className=\"task\" key={index}>\n                        <h3>Request {index + 1}</h3>\n                        <h3>Owner ID: {request.user_id}</h3>\n                        <h2>{request.title}\n                        <div className=\"FilledButton\">\n                            <Republish  request={request} fulfilled={fulfilled} />\n                        </div>\n                        </h2>\n                    </div>\n\n                )\n            })\n        :\n        <div className=\"task\">\n                        <h3>There are no requests to re-issue at this time.</h3>\n        </div>\n}\n        </div>\n        </div>\n    )\n}\n\nexport default RequestList;"]},"metadata":{},"sourceType":"module"}