{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/colthafer/client_side-main/src/Fulfilled.js\";\nimport axios from \"axios\";\nimport React, { Component } from \"react\";\n\nclass FulfilledButton extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      const {\n        request\n      } = this.props;\n      const {\n        volunteer\n      } = this.state;\n      console.log(request);\n      axios.patch(`http://localhost:3003/requests/${request.id} ${volunteer.id}`, {\n        fulfilled: true\n      }, {\n        withCredentials: true\n      }).then(response => {\n        console.log(response);\n\n        if (response.status === 200) {\n          // this.redirect()\n          const updatedRequest = response.data.request;\n          this.props.fulfillRequest(updatedRequest);\n        }\n      }).catch(error => {\n        console.log(\"request error\", error);\n      });\n      event.preventDefault();\n    };\n\n    this.redirect = () => {\n      window.location.reload();\n    };\n\n    this.state = {\n      fulfilled: this.props.request.fulfilled,\n      volunteer: []\n    };\n  }\n\n  render() {\n    console.log(this.props.request);\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: this.handleSubmit,\n      children: \"Fulfill Request\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nexport default FulfilledButton;","map":{"version":3,"sources":["/Users/colthafer/client_side-main/src/Fulfilled.js"],"names":["axios","React","Component","FulfilledButton","constructor","props","handleSubmit","event","preventDefault","request","volunteer","state","console","log","patch","id","fulfilled","withCredentials","then","response","status","updatedRequest","data","fulfillRequest","catch","error","redirect","window","location","reload","render"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,eAAN,SAA8BD,SAA9B,CAAwC;AACtCE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAQnBC,YARmB,GAQHC,KAAD,IAAW;AACxBA,MAAAA,KAAK,CAACC,cAAN;AACA,YAAM;AAAEC,QAAAA;AAAF,UAAc,KAAKJ,KAAzB;AACA,YAAM;AAAEK,QAAAA;AAAF,UAAgB,KAAKC,KAA3B;AAEAC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAZ;AACAT,MAAAA,KAAK,CACFc,KADH,CAEK,kCAAiCL,OAAO,CAACM,EAAG,IAAGL,SAAS,CAACK,EAAG,EAFjE,EAGI;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAHJ,EAII;AAAEC,QAAAA,eAAe,EAAE;AAAnB,OAJJ,EAMGC,IANH,CAMSC,QAAD,IAAc;AAClBP,QAAAA,OAAO,CAACC,GAAR,CAAYM,QAAZ;;AACA,YAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B;AACA,gBAAMC,cAAc,GAAGF,QAAQ,CAACG,IAAT,CAAcb,OAArC;AACA,eAAKJ,KAAL,CAAWkB,cAAX,CAA0BF,cAA1B;AACD;AACF,OAbH,EAcGG,KAdH,CAcUC,KAAD,IAAW;AAChBb,QAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BY,KAA7B;AACD,OAhBH;AAiBAlB,MAAAA,KAAK,CAACC,cAAN;AACD,KAhCkB;;AAAA,SAkCnBkB,QAlCmB,GAkCR,MAAM;AACfC,MAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACD,KApCkB;;AAEjB,SAAKlB,KAAL,GAAa;AACXK,MAAAA,SAAS,EAAE,KAAKX,KAAL,CAAWI,OAAX,CAAmBO,SADnB;AAEXN,MAAAA,SAAS,EAAE;AAFA,KAAb;AAID;;AAgCDoB,EAAAA,MAAM,GAAG;AACPlB,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKR,KAAL,CAAWI,OAAvB;AACA,wBAAO;AAAQ,MAAA,OAAO,EAAE,KAAKH,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AA1CqC;;AA6CxC,eAAeH,eAAf","sourcesContent":["import axios from \"axios\";\nimport React, { Component } from \"react\";\n\nclass FulfilledButton extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      fulfilled: this.props.request.fulfilled,\n      volunteer: [],\n    };\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const { request } = this.props;\n    const { volunteer } = this.state;\n\n    console.log(request);\n    axios\n      .patch(\n        `http://localhost:3003/requests/${request.id} ${volunteer.id}`,\n        { fulfilled: true },\n        { withCredentials: true }\n      )\n      .then((response) => {\n        console.log(response);\n        if (response.status === 200) {\n          // this.redirect()\n          const updatedRequest = response.data.request;\n          this.props.fulfillRequest(updatedRequest);\n        }\n      })\n      .catch((error) => {\n        console.log(\"request error\", error);\n      });\n    event.preventDefault();\n  };\n\n  redirect = () => {\n    window.location.reload();\n  };\n\n  render() {\n    console.log(this.props.request);\n    return <button onClick={this.handleSubmit}>Fulfill Request</button>;\n  }\n}\n\nexport default FulfilledButton;\n"]},"metadata":{},"sourceType":"module"}