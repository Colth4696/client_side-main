{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/colthafer/client_side-main/src/RequestMarkers.js\";\nimport React from \"react\";\nimport MyMarker from \"./MyMarker\";\nimport axios from \"axios\";\nimport { withRequests } from \"./RequestProvider\";\n\nclass RequestMarkers extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.fulfillRequest = request => {\n      const allRequests = this.state.requests;\n\n      for (let index = 0; index < allRequests.length; index++) {\n        if (allRequests[index].id === request.id) {\n          allRequests.splice(index, 1);\n          break;\n        }\n      }\n\n      this.setState({\n        requests: allRequests\n      });\n    };\n\n    this.fulfillRequest = this.fulfillRequest.bind(this);\n    this.state = {\n      requests: []\n    };\n  }\n\n  componentDidMount() {\n    console.log(this.props.requests); // axios.get(\"http://localhost:3003/requests\")\n    //   .then(response => {\n    //     console.log(response.data)\n    //     let currentRequests = response && response.data && response.data.requests.filter(req => !req.fulfilled);\n    //     this.setState({ requests: currentRequests });\n    //   })\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.state.requests && this.state.requests.map(request => {\n        return /*#__PURE__*/_jsxDEV(MyMarker, {\n          position: {\n            lat: +request.latitude,\n            lng: +request.longitude\n          },\n          title: request.title,\n          description: request.description,\n          request: request,\n          request_id: request.id,\n          user: this.props.user,\n          fulfillRequest: this.fulfillRequest\n        }, request.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 19\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default _c = withRequests(RequestMarkers);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/Users/colthafer/client_side-main/src/RequestMarkers.js"],"names":["React","MyMarker","axios","withRequests","RequestMarkers","Component","constructor","props","fulfillRequest","request","allRequests","state","requests","index","length","id","splice","setState","bind","componentDidMount","console","log","render","map","lat","latitude","lng","longitude","title","description","user"],"mappings":";;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,mBAA7B;;AAEA,MAAMC,cAAN,SAA6BJ,KAAK,CAACK,SAAnC,CAA6C;AAC3CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAkBnBC,cAlBmB,GAkBDC,OAAD,IAAa;AAC5B,YAAMC,WAAW,GAAG,KAAKC,KAAL,CAAWC,QAA/B;;AACA,WAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGH,WAAW,CAACI,MAAxC,EAAgDD,KAAK,EAArD,EAAyD;AACvD,YAAIH,WAAW,CAACG,KAAD,CAAX,CAAmBE,EAAnB,KAA0BN,OAAO,CAACM,EAAtC,EAA0C;AACxCL,UAAAA,WAAW,CAACM,MAAZ,CAAmBH,KAAnB,EAA0B,CAA1B;AACA;AACD;AACF;;AACD,WAAKI,QAAL,CAAc;AAAEL,QAAAA,QAAQ,EAAEF;AAAZ,OAAd;AACD,KA3BkB;;AAEjB,SAAKF,cAAL,GAAsB,KAAKA,cAAL,CAAoBU,IAApB,CAAyB,IAAzB,CAAtB;AACA,SAAKP,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE;AADC,KAAb;AAGD;;AAEDO,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKd,KAAL,CAAWK,QAAvB,EADkB,CAElB;AACA;AACA;AACA;AACA;AACA;AACD;;AAaDU,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,gBACG,KAAKX,KAAL,CAAWC,QAAX,IAAuB,KAAKD,KAAL,CAAWC,QAAX,CAAoBW,GAApB,CAAwBd,OAAO,IAAI;AACzD,4BAAQ,QAAC,QAAD;AAAU,UAAA,QAAQ,EAAE;AAAEe,YAAAA,GAAG,EAAE,CAACf,OAAO,CAACgB,QAAhB;AAA0BC,YAAAA,GAAG,EAAE,CAACjB,OAAO,CAACkB;AAAxC,WAApB;AACN,UAAA,KAAK,EAAElB,OAAO,CAACmB,KADT;AAEN,UAAA,WAAW,EAAEnB,OAAO,CAACoB,WAFf;AAGN,UAAA,OAAO,EAAEpB,OAHH;AAKN,UAAA,UAAU,EAAEA,OAAO,CAACM,EALd;AAMN,UAAA,IAAI,EAAE,KAAKR,KAAL,CAAWuB,IANX;AAON,UAAA,cAAc,EAAE,KAAKtB;AAPf,WAIDC,OAAO,CAACM,EAJP;AAAA;AAAA;AAAA;AAAA,gBAAR;AAQD,OATuB;AAD1B;AAAA;AAAA;AAAA;AAAA,YADF;AAeD;;AA9C0C;;AAiD7C,oBAAeZ,YAAY,CAACC,cAAD,CAA3B","sourcesContent":["\r\nimport React from \"react\";\r\nimport MyMarker from \"./MyMarker\"\r\nimport axios from \"axios\";\r\nimport { withRequests } from \"./RequestProvider\";\r\n\r\nclass RequestMarkers extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.fulfillRequest = this.fulfillRequest.bind(this);\r\n    this.state = {\r\n      requests: [],\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    console.log(this.props.requests);\r\n    // axios.get(\"http://localhost:3003/requests\")\r\n    //   .then(response => {\r\n    //     console.log(response.data)\r\n    //     let currentRequests = response && response.data && response.data.requests.filter(req => !req.fulfilled);\r\n    //     this.setState({ requests: currentRequests });\r\n    //   })\r\n  }\r\n\r\n  fulfillRequest = (request) => {\r\n    const allRequests = this.state.requests;\r\n    for (let index = 0; index < allRequests.length; index++) {\r\n      if (allRequests[index].id === request.id) {\r\n        allRequests.splice(index, 1);\r\n        break;\r\n      }\r\n    }\r\n    this.setState({ requests: allRequests });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.requests && this.state.requests.map(request => {\r\n          return (<MyMarker position={{ lat: +request.latitude, lng: +request.longitude }}\r\n            title={request.title}\r\n            description={request.description}\r\n            request={request}\r\n            key={request.id}\r\n            request_id={request.id}\r\n            user={this.props.user}\r\n            fulfillRequest={this.fulfillRequest} />)\r\n        })\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRequests(RequestMarkers);\r\n\r\n"]},"metadata":{},"sourceType":"module"}